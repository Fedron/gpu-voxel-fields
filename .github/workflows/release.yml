name: Build and Release Rust Project (Multi-OS)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build the project
        working-directory: implementation
        run: cargo build --release

      - name: Rename and prepare artifacts
        run: |
          mkdir artifacts
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp implementation\target\release\voxels.exe artifacts\<your_executable_name>-windows.exe
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            cp implementation/target/release/voxels artifacts/<your_executable_name>-macos
          else
            cp implementation/target/release/voxels artifacts/<your_executable_name>-linux
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: artifacts/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
